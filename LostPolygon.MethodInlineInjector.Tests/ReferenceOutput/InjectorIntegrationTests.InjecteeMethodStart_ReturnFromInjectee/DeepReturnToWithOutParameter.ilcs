.method public hidebysig
    instance void WithOutParameter (
        int32 a,
        int32 b,
        [out] float32& c
    ) cil managed
{
    // Method begins at RVA 0x219a
    // Code size 53 (0x35)
    .maxstack 8
    .locals (
        [0] class [mscorlib]System.Random,
        [1] bool,
        [2] bool
    )

    IL_0000: nop
    IL_0001: ldstr "Injected: Begin"
    IL_0006: call void [mscorlib]System.Console::WriteLine(string)
    IL_000b: nop
    IL_000c: newobj instance void [mscorlib]System.Random::.ctor()
    IL_0011: stloc.0
    IL_0012: ldloc.0
    IL_0013: callvirt instance float64 [mscorlib]System.Random::NextDouble()
    IL_0018: ldc.r8 0.5
    IL_0021: cgt
    IL_0023: stloc.1
    IL_0024: ldloc.1
    IL_0025: brfalse.s IL_0056
    IL_0027: nop
    IL_0028: ldstr "Injected: Bad luck :("
    IL_002d: call void [mscorlib]System.Console::WriteLine(string)
    IL_0032: nop
    IL_0033: ldloc.0
    IL_0034: callvirt instance float64 [mscorlib]System.Random::NextDouble()
    IL_0039: ldc.r8 0.5
    IL_0042: cgt
    IL_0044: stloc.2
    IL_0045: ldloc.2
    IL_0046: brfalse.s IL_0055
    IL_0048: nop
    IL_0049: ldstr "Injected: Super bad luck :("
    IL_004e: call void [mscorlib]System.Console::WriteLine(string)
    IL_0053: nop
    IL_0054: ret
    IL_0055: nop
    IL_0056: ldstr "Injected: End"
    IL_005b: call void [mscorlib]System.Console::WriteLine(string)
    IL_0060: nop
    IL_0061: nop
    IL_0062: nop
    IL_0063: ldstr "Injectee: Begin"
    IL_0068: call void [mscorlib]System.Console::WriteLine(string)
    IL_006d: nop
    IL_006e: ldarg.3
    IL_006f: ldarg.1
    IL_0070: ldarg.2
    IL_0071: add
    IL_0072: conv.r4
    IL_0073: stind.r4
    IL_0074: ldstr "Injectee: c = a + b = "
    IL_0079: ldarg.3
    IL_007a: ldind.r4
    IL_007b: box [mscorlib]System.Single
    IL_0080: call string [mscorlib]System.String::Concat(object, object)
    IL_0085: call void [mscorlib]System.Console::WriteLine(string)
    IL_008a: nop
    IL_008b: ldstr "Injectee: End"
    IL_0090: call void [mscorlib]System.Console::WriteLine(string)
    IL_0095: nop
    IL_0096: ret
} // end of method TestInjectee::WithOutParameter

// End of IL code

public void WithOutParameter(int a, int b, out float c)
{
    Console.WriteLine("Injected: Begin");
    Random random = new Random();
    bool flag = random.NextDouble() > 0.5;
    if (flag)
    {
        Console.WriteLine("Injected: Bad luck :(");
        bool flag2 = random.NextDouble() > 0.5;
        if (flag2)
        {
            Console.WriteLine("Injected: Super bad luck :(");
            return;
        }
    }
    Console.WriteLine("Injected: End");
    Console.WriteLine("Injectee: Begin");
    c = (float)(a + b);
    Console.WriteLine("Injectee: c = a + b = " + c);
    Console.WriteLine("Injectee: End");
}