.method public hidebysig
    instance void Complex () cil managed
{
    // Method begins at RVA 0x2078
    // Code size 153 (0x99)
    .maxstack 3
    .locals init (
        [0] class [mscorlib]System.Exception,
        [1] float32,
        [2] float32,
        [3] class [mscorlib]System.Random,
        [4] bool,
        [5] bool
    )

    IL_0000: nop
    IL_0001: ldstr "Injected: Start"
    IL_0006: call void [mscorlib]System.Console::WriteLine(string)
    IL_000b: nop
    IL_000c: nop
    IL_000d: ldstr "Injected: Try"
    IL_0012: call void [mscorlib]System.Console::WriteLine(string)
    IL_0017: nop
    IL_0018: nop
    IL_0019: leave.s IL_0030
    IL_001b: stloc.0
    IL_001c: nop
    IL_001d: ldstr "Injected: Catch "
    IL_0022: ldloc.0
    IL_0023: call string [mscorlib]System.String::Concat(object, object)
    IL_0028: call void [mscorlib]System.Console::WriteLine(string)
    IL_002d: nop
    IL_002e: rethrow
    IL_0030: leave.s IL_0040
    IL_0032: nop
    IL_0033: ldstr "Injected: Finally"
    IL_0038: call void [mscorlib]System.Console::WriteLine(string)
    IL_003d: nop
    IL_003e: nop
    IL_003f: endfinally
    IL_0040: ldstr "Injected: End"
    IL_0045: call void [mscorlib]System.Console::WriteLine(string)
    IL_004a: nop
    IL_004b: nop
    IL_004c: nop
    IL_004d: ldstr "Injectee: Begin"
    IL_0052: call void [mscorlib]System.Console::WriteLine(string)
    IL_0057: nop
    IL_0058: ldc.r4 -59
    IL_005d: call float32 [mscorlib]System.Math::Abs(float32)
    IL_0062: stloc.1
    IL_0063: ldc.r4 300
    IL_0068: stloc.2
    IL_0069: newobj instance void [mscorlib]System.Random::.ctor()
    IL_006e: stloc.3
    IL_006f: ldloc.3
    IL_0070: callvirt instance float64 [mscorlib]System.Random::NextDouble()
    IL_0075: ldc.r8 0.5
    IL_007e: cgt
    IL_0080: stloc.s 4
    IL_0082: ldloc.s 4
    IL_0084: brfalse.s IL_00c3
    IL_0086: nop
    IL_0087: ldstr "Injectee: Random > 0.5!"
    IL_008c: call void [mscorlib]System.Console::WriteLine(string)
    IL_0091: nop
    IL_0092: ldloc.3
    IL_0093: callvirt instance float64 [mscorlib]System.Random::NextDouble()
    IL_0098: ldc.r8 0.5
    IL_00a1: cgt
    IL_00a3: stloc.s 5
    IL_00a5: ldloc.s 5
    IL_00a7: brfalse.s IL_00b7
    IL_00a9: nop
    IL_00aa: ldstr "Injectee: Random still > 0.5!"
    IL_00af: call void [mscorlib]System.Console::WriteLine(string)
    IL_00b4: nop
    IL_00b5: br.s IL_00e6
    IL_00b7: ldstr "Injectee: First Random was > 0.5!"
    IL_00bc: call void [mscorlib]System.Console::WriteLine(string)
    IL_00c1: nop
    IL_00c2: nop
    IL_00c3: ldstr "Injectee: a * b = "
    IL_00c8: ldloc.1
    IL_00c9: ldloc.2
    IL_00ca: mul
    IL_00cb: box [mscorlib]System.Single
    IL_00d0: call string [mscorlib]System.String::Concat(object, object)
    IL_00d5: call void [mscorlib]System.Console::WriteLine(string)
    IL_00da: nop
    IL_00db: ldstr "Injectee: End"
    IL_00e0: call void [mscorlib]System.Console::WriteLine(string)
    IL_00e5: nop
    IL_00e6: ret

    Try IL_000c-IL_001b Catch class [mscorlib]System.Exception IL_001b-IL_0030
    Try IL_000c-IL_0032 Finally IL_0032-IL_0040
} // end of method TestInjectee::Complex

// End of IL code

public void Complex()
{
    Console.WriteLine("Injected: Start");
    try
    {
        Console.WriteLine("Injected: Try");
    }
    catch (Exception arg)
    {
        Console.WriteLine("Injected: Catch " + arg);
        throw;
    }
    finally
    {
        Console.WriteLine("Injected: Finally");
    }
    Console.WriteLine("Injected: End");
    Console.WriteLine("Injectee: Begin");
    float num = Math.Abs(-59f);
    float num2 = 300f;
    Random random = new Random();
    bool flag = random.NextDouble() > 0.5;
    if (flag)
    {
        Console.WriteLine("Injectee: Random > 0.5!");
        bool flag2 = random.NextDouble() > 0.5;
        if (flag2)
        {
            Console.WriteLine("Injectee: Random still > 0.5!");
            return;
        }
        Console.WriteLine("Injectee: First Random was > 0.5!");
    }
    Console.WriteLine("Injectee: a * b = " + num * num2);
    Console.WriteLine("Injectee: End");
}