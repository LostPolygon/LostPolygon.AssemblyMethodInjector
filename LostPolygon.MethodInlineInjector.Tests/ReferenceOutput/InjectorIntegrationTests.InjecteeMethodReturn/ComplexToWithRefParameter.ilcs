.method public hidebysig
    instance void WithRefParameter (
        int32 a,
        float32& b
    ) cil managed
{
    // Method begins at RVA 0x2135
    // Code size 60 (0x3c)
    .maxstack 8
    .locals (
        [0] class [System]System.Text.RegularExpressions.Regex,
        [1] int32,
        [2] float64,
        [3] uint16,
        [4] bool
    )

    IL_0000: nop
    IL_0001: ldstr "Injectee: Begin"
    IL_0006: call void [mscorlib]System.Console::WriteLine(string)
    IL_000b: nop
    IL_000c: ldarg.2
    IL_000d: ldarg.2
    IL_000e: ldind.r4
    IL_000f: ldc.r4 3.14
    IL_0014: add
    IL_0015: stind.r4
    IL_0016: ldstr "Injectee: a + b = "
    IL_001b: ldarg.1
    IL_001c: conv.r4
    IL_001d: ldarg.2
    IL_001e: ldind.r4
    IL_001f: add
    IL_0020: box [mscorlib]System.Single
    IL_0025: call string [mscorlib]System.String::Concat(object, object)
    IL_002a: call void [mscorlib]System.Console::WriteLine(string)
    IL_002f: nop
    IL_0030: ldstr "Injectee: End"
    IL_0035: call void [mscorlib]System.Console::WriteLine(string)
    IL_003a: nop
    IL_003b: nop
    IL_003c: nop
    IL_003d: ldstr "Injected: Begin"
    IL_0042: call void [mscorlib]System.Console::WriteLine(string)
    IL_0047: nop
    IL_0048: ldstr "foo"
    IL_004d: newobj instance void [System]System.Text.RegularExpressions.Regex::.ctor(string)
    IL_0052: stloc.0
    IL_0053: ldloc.0
    IL_0054: ldstr "test"
    IL_0059: callvirt instance bool [System]System.Text.RegularExpressions.Regex::IsMatch(string)
    IL_005e: stloc.s 4
    IL_0060: ldloc.s 4
    IL_0062: brfalse.s IL_0072
    IL_0064: nop
    IL_0065: ldstr "Injected: Somehow it matched"
    IL_006a: call void [mscorlib]System.Console::WriteLine(string)
    IL_006f: nop
    IL_0070: br.s IL_00b1
    IL_0072: ldc.i4.s -5
    IL_0074: call int32 [mscorlib]System.Math::Abs(int32)
    IL_0079: stloc.1
    IL_007a: ldc.r8 30
    IL_0083: stloc.2
    IL_0084: ldc.i4 444
    IL_0089: stloc.3
    IL_008a: ldstr "Injected: a * b * c = "
    IL_008f: ldloc.1
    IL_0090: conv.r8
    IL_0091: ldloc.2
    IL_0092: mul
    IL_0093: ldloc.3
    IL_0094: conv.r8
    IL_0095: mul
    IL_0096: box [mscorlib]System.Double
    IL_009b: call string [mscorlib]System.String::Concat(object, object)
    IL_00a0: call void [mscorlib]System.Console::WriteLine(string)
    IL_00a5: nop
    IL_00a6: ldstr "Injected: End"
    IL_00ab: call void [mscorlib]System.Console::WriteLine(string)
    IL_00b0: nop
    IL_00b1: ret
} // end of method TestInjectee::WithRefParameter

// End of IL code

public void WithRefParameter(int a, ref float b)
{
    Console.WriteLine("Injectee: Begin");
    b += 3.14f;
    Console.WriteLine("Injectee: a + b = " + ((float)a + b));
    Console.WriteLine("Injectee: End");
    Console.WriteLine("Injected: Begin");
    Regex regex = new Regex("foo");
    bool flag = regex.IsMatch("test");
    if (flag)
    {
        Console.WriteLine("Injected: Somehow it matched");
    }
    else
    {
        int num = Math.Abs(-5);
        double num2 = 30.0;
        ushort num3 = 444;
        Console.WriteLine("Injected: a * b * c = " + (double)num * num2 * (double)num3);
        Console.WriteLine("Injected: End");
    }
}