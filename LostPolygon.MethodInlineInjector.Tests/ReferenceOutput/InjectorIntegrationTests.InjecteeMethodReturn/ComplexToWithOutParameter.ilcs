.method public hidebysig
    instance void WithOutParameter (
        int32 a,
        int32 b,
        [out] float32& c
    ) cil managed
{
    // Method begins at RVA 0x2172
    // Code size 53 (0x35)
    .maxstack 8
    .locals (
        [0] class [System]System.Text.RegularExpressions.Regex,
        [1] int32,
        [2] float64,
        [3] uint16,
        [4] bool
    )

    IL_0000: nop
    IL_0001: ldstr "Injectee: Begin"
    IL_0006: call void [mscorlib]System.Console::WriteLine(string)
    IL_000b: nop
    IL_000c: ldarg.3
    IL_000d: ldarg.1
    IL_000e: ldarg.2
    IL_000f: add
    IL_0010: conv.r4
    IL_0011: stind.r4
    IL_0012: ldstr "Injectee: c = a + b = "
    IL_0017: ldarg.3
    IL_0018: ldind.r4
    IL_0019: box [mscorlib]System.Single
    IL_001e: call string [mscorlib]System.String::Concat(object, object)
    IL_0023: call void [mscorlib]System.Console::WriteLine(string)
    IL_0028: nop
    IL_0029: ldstr "Injectee: End"
    IL_002e: call void [mscorlib]System.Console::WriteLine(string)
    IL_0033: nop
    IL_0034: nop
    IL_0035: nop
    IL_0036: ldstr "Injected: Begin"
    IL_003b: call void [mscorlib]System.Console::WriteLine(string)
    IL_0040: nop
    IL_0041: ldstr "foo"
    IL_0046: newobj instance void [System]System.Text.RegularExpressions.Regex::.ctor(string)
    IL_004b: stloc.0
    IL_004c: ldloc.0
    IL_004d: ldstr "test"
    IL_0052: callvirt instance bool [System]System.Text.RegularExpressions.Regex::IsMatch(string)
    IL_0057: stloc.s 4
    IL_0059: ldloc.s 4
    IL_005b: brfalse.s IL_006b
    IL_005d: nop
    IL_005e: ldstr "Injected: Somehow it matched"
    IL_0063: call void [mscorlib]System.Console::WriteLine(string)
    IL_0068: nop
    IL_0069: br.s IL_00aa
    IL_006b: ldc.i4.s -5
    IL_006d: call int32 [mscorlib]System.Math::Abs(int32)
    IL_0072: stloc.1
    IL_0073: ldc.r8 30
    IL_007c: stloc.2
    IL_007d: ldc.i4 444
    IL_0082: stloc.3
    IL_0083: ldstr "Injected: a * b * c = "
    IL_0088: ldloc.1
    IL_0089: conv.r8
    IL_008a: ldloc.2
    IL_008b: mul
    IL_008c: ldloc.3
    IL_008d: conv.r8
    IL_008e: mul
    IL_008f: box [mscorlib]System.Double
    IL_0094: call string [mscorlib]System.String::Concat(object, object)
    IL_0099: call void [mscorlib]System.Console::WriteLine(string)
    IL_009e: nop
    IL_009f: ldstr "Injected: End"
    IL_00a4: call void [mscorlib]System.Console::WriteLine(string)
    IL_00a9: nop
    IL_00aa: ret
} // end of method TestInjectee::WithOutParameter

// End of IL code

public void WithOutParameter(int a, int b, out float c)
{
    Console.WriteLine("Injectee: Begin");
    c = (float)(a + b);
    Console.WriteLine("Injectee: c = a + b = " + c);
    Console.WriteLine("Injectee: End");
    Console.WriteLine("Injected: Begin");
    Regex regex = new Regex("foo");
    bool flag = regex.IsMatch("test");
    if (flag)
    {
        Console.WriteLine("Injected: Somehow it matched");
    }
    else
    {
        int num = Math.Abs(-5);
        double num2 = 30.0;
        ushort num3 = 444;
        Console.WriteLine("Injected: a * b * c = " + (double)num * num2 * (double)num3);
        Console.WriteLine("Injected: End");
    }
}